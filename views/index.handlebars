<section class="hero is-verlauf is-fullheight">
  <div class="hero-body">
    <div class="container">
      <div class="columns">
        <div class="column">
          <h1 class="title is-2 has-text-white has-text-weight-bold">WorkTime</h1>
          <p class="subtitle is-4 has-text-sub">Einfache Verwaltung von Arbeitszeiten <br> für jedermann.</p>
          <a href="#newtime" class="button is-light is-outlined is-rounded">Neue Arbeitszeit hinzufügen</a>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function getProjekt(kunde) {
    var xhttp = new XMLHttpRequest();
    console.log('Requesting Data from Database');

    var x = document.getElementById("projekt");
    x.options.length = 1;
    xhttp.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200) {
        var myArr = JSON.parse(this.responseText);

        for (i = 0; i < myArr.length; i++) {
          var option = document.createElement("option");
          option.text = myArr[i].projektname;
          option.value = myArr[i].id;
          x.add(option);
        }

        //document.getElementById("ausgabe").innerHTML = this.responseText;
      }
    };
    var path = '/get_projekte/';
    xhttp.open("POST", path.concat(kunde), true);
    xhttp.send();

  }

  function getUNIXTime(datum, time, id) {
    var zeit = datum + ' ' + time + ':00';
    document.getElementById(id).value = zeit;
    return (new Date(zeit).getTime() / 1000)
  }

  function validate() {
    var errors = [];
    //einzugebendes Datum darf nicht in der Zukunft liegen

    //http request ob Mitarbeiter schon zu dieser Zeit in einem anderen Projekt gearbeitet hat. Kann nicht an zwei Projekten zur gleichen Zeit arbeiten

    //prüfen ob arbeitsende nach arbeitsbeginn + Pause & ob Pause größer als Arbeitszeit ist
    var pause = document.getElementById('pause').value;
    var datum = document.getElementById('datum').value;

    var ab = getUNIXTime(datum, document.getElementById('arbeitsbeginn').value, 'abUNIX');
    var ae = getUNIXTime(datum, document.getElementById('arbeitsende').value, 'aeUNIX');

    if (ae <= ab) {
      errors.push('Arbeitsende kann nicht vor oder gleich Arbeitsbeginn sein.');
    }
    var arbeitszeit = (ae - ab) / 3600;

    if (arbeitszeit <= pause / 60) {
      errors.push('Fehlerhafte Eingabe. Mehr Pause als Arbeitszeit inklusive Pause');
    }

    var reineArbeitszeit = arbeitszeit - (pause / 60);
    document.getElementById('arbeitszeit').value = reineArbeitszeit;

    //prüfen ob Feld kunde = 0 & ob ein Projekt ausgewählt wurde
    var kunde = document.getElementById('kunde').value;
    var projekt = document.getElementById('projekt').value;
    if (kunde == 0) {
      errors.push('Bitte wählen Sie einen Kunden aus.');
    }
    if (projekt == 0) {
      errors.push('Bitte wählen Sie ein Projekt aus');
    }

    if (errors.length > 0) {
      alert(errors.join("\n"));
      return false;
    }
    return true;

  }
</script>

<section class="section enter-time user_selector" id="newtime">
  <div class="container">
    <div class="columns">
      <div class="column">
        <h1 class="title is-3 has-text-white">Neue Arbeitszeit erfassen</h1>
        <p class="subtitle is-4 has-text-sub">Tragen Sie Ihre Arbeitszeit ein.</p>
      </div>
    </div>
    <form action="/" method="post" onsubmit="return validate()">
      <div class="input_user_fields">
        <div class="columns">
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Mitarbeiter wählen</label>
              <div class="control">
                <div class="select">
                  <select name="mitarbeiter">
                    {{#each mitarbeiter }}
                    <option value="{{id}}">{{nachname}}, {{vorname}}</option>
                    {{/each}}
                  </select>
                </div>
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Kunde wählen</label>
              <div class="control">
                <div class="select">
                  <select name="kunde" id="kunde" onchange="getProjekt(this.value)">
                    <option value="0" selected>Kunde wählen</option>
                    {{#each firmennamen }}
                    <option value="{{id}}">{{firmenname}}</option>
                    {{/each}}
                  </select>
                </div>
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Projekt wählen</label>
              <div class="control">
                <div class="select">
                  <select name="projekt" id="projekt">
                    <option value="0" selected>Projekt wählen</option>
                  </select>
                </div>
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Datum wählen</label>
              <div class="control">
                <input class="input" type="date" name="datum" id="datum" placeholder="1.1.2020">
              </div>
            </div>

          </div>
        </div>
        <div class="columns">
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Arbeitsbeginn</label>
              <div class="control">
                <input class="input" type="time" step="900" id="arbeitsbeginn" name="arbeitsbeginn">
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Arbeitseinde</label>
              <div class="control">
                <input class="input" type="time" step="900" id="arbeitsende" name="arbeitsende">
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Pause in Minuten</label>
              <div class="control">
                <input class="input" type="number" step="15" id="pause" name="pause">
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Fahrtkosten in KM</label>
              <div class="control">
                <input class="input" placeholder="0" min="0" type="number" step="1" id="fahrtkosten" name="fahrtkosten">
              </div>
            </div>

          </div>

        </div>
        <div class="columns">
          <div class="column is-9">

            <div class="field">
              <label class="label has-text-white">Was wurde bearbeitet</label>
              <div class="control">
                <input class="input" type="text" id="erledigt" name="erledigt">
              </div>
            </div>

          </div>
          <div class="column">

            <div class="field">
              <label class="label has-text-white">Was wurde bearbeitet</label>
              <div class="control">
                <button class="btn button" type="submit">Absenden</button>
                <input id="abUNIX" name="abUNIX" type="hidden" value="">
                <input id="aeUNIX" name="aeUNIX" type="hidden" value="">
                <input id="arbeitszeit" name="arbeitszeit" type="hidden" value="">
              </div>
            </div>

          </div>
        </div>
        <section class="section">
          <div class="columns">
            <div class="column">
              <p class="subtitle is-5 has-text-sub">Sollten Probleme auftreten, so wenden Sie sich bitte an unserer
                technischen Support!</p>
              <a href="">Kontakt</a>
            </div>

          </div>
        </section>
    </form>
  </div>
</section>